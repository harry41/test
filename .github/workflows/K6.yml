# This is a basic workflow to help you get started with Actions

name: CI-K6

# Controls when the workflow will run
on:
  - cron:  '0 */1 * * *'
  # Triggers the workflow on push or pull request events but only for the main branch
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      users:
        description: 'No of Users'
        default: '10000'
      duration:
        description: 'Time duration'
        default: '600s'
      domain_url:
        description: 'Enter Domain URL'
        default: 'https://sritez.com'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-1:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Pull Docker k6 image
        run: docker pull loadimpact/k6
        
      # Runs a set of commands using the runners shell
      - name: Run a K6 load test
        run: |
          echo "import http from 'k6/http';
          import { sleep } from 'k6';
          export let options = {
            vus: ${{ github.event.inputs.users }},
            duration: '${{ github.event.inputs.duration }}',
          };
          export default function () {
            http.get('${{ github.event.inputs.domain_url }}');
            sleep(1);
          }" >> script.js
          docker run -i loadimpact/k6 run - <script.js
          
  # This workflow contains a single job called "build"
  build-2:
    runs-on: ubuntu-latest
    steps:
      - name: Pull Docker k6 image
        run: docker pull loadimpact/k6
      - name: Run a K6 load test
        run: |
          echo "import http from 'k6/http';
          import { sleep } from 'k6';
          export let options = {
            vus: ${{ github.event.inputs.users }},
            duration: '${{ github.event.inputs.duration }}',
          };
          export default function () {
            http.get('${{ github.event.inputs.domain_url }}');
            sleep(1);
          }" >> script.js
          docker run -i loadimpact/k6 run - <script.js
